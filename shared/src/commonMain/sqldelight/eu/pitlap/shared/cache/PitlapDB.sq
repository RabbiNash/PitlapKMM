
CREATE TABLE YoutubeVideo (
    video_id TEXT NOT NULL PRIMARY KEY,
    thumbnail_url TEXT,
    title TEXT NOT NULL,
    description TEXT NOT NULL,
    channel_name TEXT NOT NULL,
    created_at TEXT NOT NULL,
    updated_at TEXT NOT NULL
);

CREATE TABLE EventSchedule (
    round INTEGER NOT NULL,
    country TEXT NOT NULL,
    officialEventName TEXT NOT NULL,
    eventName TEXT NOT NULL,
    eventFormat TEXT NOT NULL,
    session1 TEXT NOT NULL,
    session1DateUTC TEXT,
    session2 TEXT NOT NULL,
    session2DateUTC TEXT,
    session3 TEXT NOT NULL,
    session3DateUTC TEXT,
    session4 TEXT NOT NULL,
    session4DateUTC TEXT,
    session5 TEXT NOT NULL,
    session5DateUTC TEXT,
    year TEXT NOT NULL
);

insertEvent:
INSERT INTO EventSchedule(round, country, officialEventName, eventName, eventFormat, session1,session1DateUTC, session2, session2DateUTC, session3, session3DateUTC, session4, session4DateUTC, session5,session5DateUTC, year)
VALUES (?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

removeAllEVents:
DELETE FROM EventSchedule;

selectAllEventsInfo:
SELECT EventSchedule.*
FROM EventSchedule;

selectEventByYearAndRound:
SELECT EventSchedule.*
FROM EventSchedule
WHERE year = ? AND round = ?
LIMIT 1;

selectEventByYear:
SELECT EventSchedule.*
FROM EventSchedule
WHERE year = ?;

selectNextUpcomingEvent:
SELECT *
FROM EventSchedule
WHERE datetime(session5DateUTC) > datetime('now')
ORDER BY datetime(session5DateUTC) ASC
LIMIT 1;

insertOrReplaceVideo:
INSERT OR REPLACE INTO YoutubeVideo (
    video_id, thumbnail_url, title, description, channel_name, created_at, updated_at
) VALUES (?, ?, ?, ?, ?, ?,?);

selectAllVideos:
SELECT * FROM YoutubeVideo
ORDER BY created_at DESC
LIMIT 30;

selectVideoById:
SELECT * FROM YoutubeVideo
WHERE video_id = ?
LIMIT 1;

selectVideoByChannelName:
SELECT * FROM YoutubeVideo
WHERE channel_name LIKE ?;

deleteAllVideos:
DELETE FROM YoutubeVideo;
